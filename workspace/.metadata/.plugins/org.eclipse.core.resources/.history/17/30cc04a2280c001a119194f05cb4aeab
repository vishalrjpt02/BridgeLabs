package com.bridgelabz.Utility;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;

public class MyPrograms 
{
	
	public static String ReplaceString() 
	{
		System.out.println("enter your whole text");
		String s1=myscanner.readLine();
		System.out.println("enter the string want to remove");
		String s2=myscanner.readLine();
		System.out.println("enter the string want to add");
		String s3=myscanner.readLine();
		String out="";
		for(String s:s1.split("\\s"))
		{
			if(s.equals(s2))
			{
				s=s3;
				out=out+s+" ";
				
			}
			else
			out=out+s+" ";
		}
		return out;
	}
	
	
	
	
	//Flip the coin
	
	public static double flipcoin() 
	{
		double head=0;double tail=0;
		float headcount=0,tailcount=0;
		
		System.out.println("Enter number of flips");
		int time=myscanner.readInteger();
		if(time>0)
		{
			for(int i=0;i<=time;i++)
			{
				head=Math.random();
				tail=Math.random();
				if(head>0.5)
				{
					headcount++;
				}
				else if(tail>0.5)
				{
					tailcount++;
				}
			}
		}
		double out=(tailcount/headcount)*100;
		return out;
	}
	
	
	
	//Leap year or not
	
	public static void leapYear(String[] args) 
	{
		
		int year=myscanner.readInteger();
		boolean out=false;
		if(year>1000)
		{
			if(year/4==0)
			{
				if(year/100!=0)
				{
					if(year/400==0)
					{
						out=true;
					}
					else
						out=false;
				}
				else
					out= false;
			}
		}
		if(out==true)
		System.out.println("Is A leap year");
		else
			System.out.println("Is A leap year");	
	}
	
	
	
	
	
	//power of 2 in a given range
	/*
	 * @param type integer
	 * @return type void
	 */
	public static void poweof2(int num) 
	{
		double out=0;
		double sample=Math.pow(2,num);
		for(int i=0;i<sample;i++)
		{
			out=Math.pow(2,i);
			if(out<sample)
			{
				System.out.println(out);
			}
			
		}
	}
	
	
	
	
	//harmonic number
	
	public static double harmonic(int limit) 
	{
		double sum=0;
		int num=limit;
		if(num>1)
		{
			for(double i=1;i<=num;i++)
			{
				sum=sum+1/i;
			}	
		}
		return sum;
	}
	
	
	
	//two dimational array
	
	public static void TwoDarray() 
	{
		int arr[][]=new int[3][3];
		for(int i=0;i<3;i++)
			{
			for(int j=0;j<3;j++)
				{
				  arr[i][j]=myscanner.readInteger();
				}
			}
		for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
			{
				System.out.print(arr[i][j]+" ");
			}
			System.out.println();
		}
	}
	
	
	
	
	//sum of 3 digit add to zero
	
	public static int[] sumof3digit(int arr[]) 
	{
		//int num=myscanner.readInteger();
		//int arr[]=new int[num];
		int out[]=new int[3];
		/*for(int i=0;i<num;i++)
		{
			arr[i]=myscanner.readInteger();
		}*/
		for(int i=0;i<arr.length;i++)
		{
			for(int j=i+1;j<arr.length;j++)
			{
				for(int k=j+1;k<arr.length;k++)
				{
					if(arr[i]+arr[j]+arr[k]==0)
					{
						//System.out.println(i+" "+j +" "+k);
						out[0]=arr[i];
						out[1]=arr[j];
						out[2]=arr[k];
						break;
					}
				}
			}
		}
		return out;
	}
	
	
	
	
	//Distance of ecludian point
	
	public static void ecludian(String[] args)
	{
		
		int x=myscanner.readInteger();
		int y=myscanner.readInteger();
		double out=0;
		out=Math.sqrt(((x*x) + (y*y)));
		System.out.println(out);
	}
	
	
	
	//quadratic 
	public static void quadratic()
	{
	
		int a=myscanner.readInteger();
		int b=myscanner.readInteger();
		int c=myscanner.readInteger();
		
		double delta = ((b*b)-(4*a*c));
		double root1=0;
		double root2=0;
		if(delta>0)
		{
		root1=(-b + Math.sqrt(delta))/(2*a);
		root2=(-b - Math.sqrt(delta))/(2*a);
		System.out.println(root1 +" " +root2);
		}
		else if(delta==0)
		{
			root1=root2= -b/2*a;
			System.out.println(root1 +" " +root2);
		}
		else
			System.out.println(Math.sqrt(-delta)/(2*a));

	}
	
	
	
	
	
	//windchill program
	public static void Windchill()
	{
		double t=myscanner.readDouble();
		double v=myscanner.readDouble();
		double windchil=0;
		if(t<50 && v<120)
		windchil= 35.74+(0.6215*t)+((0.4275*t)-35.75)*Math.pow(v,0.16);
		System.out.println(windchil);
	}
	
	
	
	//gambbler program
	
	public static void Gambbler()
	{
		int max=myscanner.readInteger();
		int min=myscanner.readInteger();
		int plays=myscanner.readInteger();
		int win=0,loss=0;
		int bet=0,cash=max;
		for(int i=0;i<plays;i++)
		{
			while(cash>min && cash>0)
			{
				bet++;
				if(Math.random()>0.5)
					{win++; cash++;}
				else
					{loss++; cash--;
					}
			}
			
		}
		System.out.println("total bet " +bet +" \ntotal win " +win +" \nloss is " +loss);
	}
	
	
	
	
	//Coupon Numbers

	public static void CuponNumber()
	{
		int num=myscanner.readInteger();
		double arr[]=new double[num];
		int count=0;
		while(count<=num)
		{
			double rnum=Math.random();
			for(int i=0;i<arr.length;i++)
			{
				
				if(arr[i]==rnum)
				{
					break;
				}
				else
				{
					arr[i]=rnum;
					count++;
				}
				
			}
			
		}
		System.out.print(count);
	}	
	
	
	
	//Simulate Stopwatch Program
	
	
	public static void Stopwatch() 
	{
		
		  System.out.print("to start type 1\n");
		  int s=myscanner.readInteger();
		  double start=0.0;
		  double stop=0.0;
		  if(s==1)
		  {
		  start=System.currentTimeMillis();
		  System.out.print("enter end to 0\n");
		  int end=myscanner.readInteger();
		  if(end==0)
		  {
			  stop=System.currentTimeMillis();
			  System.out.println("elipse time="+(stop-start)+" Millisecond");
		  }
		  }
	}
	
	//Cross Game or Tic-Tac-Toe Game
	
	
	
	
	
////////////////////JUNIT Testing//////////////////////////JUNIT testing//////////////////////////////
	
	
	
	//Vending Mechine
	
	public static void vendingMech(int num)
	{
		int notes[]={1000,500,100,50,10,5,2,1};
		int notecount[]=new int[8];
		
		for(int i=0;i<notes.length;i++)
		{
			if(num>=notes[i])
			{
				notecount[i]=num/notes[i];
				num=num-notecount[i]*notes[i];
			}
		}
		System.out.println("Currency Count ->"); 
	       for (int i = 0; i<8; i++)
	        { 
	           if (notecount[i] != 0)
	           { 
	               System.out.println(notes[i] + " : " + notecount[i]); 
	           }     
	        }
	}
	
	
	
	//Day of the week
	
	public static void Dayoftheweek(int d,int m,int y)
	{
		y=y-(14-m)/12;
		int x=0;
		x = y+ y/4-y/100 + y/400;
		m=m+12*((14-m)/12)-2;
		d= (d+x+31*m/12)%7;
		String []days={"sunday","monday","tuesday","Wednesday","thursday","friday","friday","saturday"};
		for(int i=0;i<days.length;i++)
		{
			if(d==i)
			{
				System.out.println(days[i]);
			}
		}
	}
	
	
	
	
	// Temperatur Conversion
	
	public static void Temprature(double temp) 
	{
		double cel = 0.0;
		cel = (temp - 32) * 5 / 9;
		System.out.print(cel);

	}
	
	//Monthly payment
	
	public static void Payment(double p,int y,double r)
	{
		double pay=0.0;
		int n=12*y;
		double R=r/(12*100); 
		pay = p*R/(1-Math.pow(1+R,-n));
		System.out.println("monthly payment is " +pay);
	}
	
	//sqare root
	
	public static void sqrt(int c)
	{
		double epsilon=1e-15;
		double t=c;
		while(Math.abs(t-c/t)>epsilon*t)
		{
			t=(c/t+t)/2.0;
		}
		System.out.print(t);
	}
	
	//Decimal to Binary conversion
	
	public static void toBinary(int n)
	{
		ArrayList<Integer> al = new ArrayList<Integer>();
		while(n>0)
		{
			int rem=n%2;
			al.add(rem);
			n=n/2;
		}
		Collections.reverse(al); 
		Iterator<Integer> itr= al.iterator();
		while(itr.hasNext())
		{
			System.out.print(itr.next());
		}
	}
	
	
	
	
	
	//decimal to0 binary and nubbies conversion to decimal
	
	public static void Binarytodecimal(int n)
	{
		double out=0;
		ArrayList<Integer> al = new ArrayList<Integer>();
		while(n>0)
		{
			int rem=n%2;
			al.add(rem);
			n=n/2;
		}
		ArrayList<Integer> al1 = new ArrayList<Integer>();
		for(int i=0;i<al.size()/2;i++)
		{
			al1.add(al.get(i));
		}
		
		Collections.reverse(al); 
		ArrayList<Integer> al2 = new ArrayList<Integer>();
		
		for(int i=0;i<al.size()/2;i++)
		{
			al2.add(al.get(i));
		}
		
		for(int i=0;i<al.size()/2;i++)
		{
			System.out.print(al1.get(i));
		}
		
		System.out.print("  ");
		
		for(int i=0;i<al.size()/2;i++)
		{
			System.out.print(+al2.get(i));
		}
		
		al.removeAll(al);
		al.addAll(al2);
		al.addAll(al1);
		
		for(int i=0;i<al.size();i++)
		{
			double sum=2;
			
			if(al.get(i)>0)
			{
				int count =i;
				while(count>=0)
				{
					sum=Math.pow(2,i);
					sum=sum*2;
					count--;
				}
				out=out+sum;
			}	
		}
		
		System.out.println(" \n"+out);
		
	}
	
	
////////////////////////////////Algorithm programs/////////////////////////////////////

	//permutation of a string
	
	public static void permute(String str,int l,int r)
	{
		if(l==r)
		{
			System.out.println(str);
		}
		else
		{
			for(int i=l;i<r;i++)
			{
				str=swap(str,l,i);
				permute(str,l+1,r);
				str=swap(str,l,i);
			}
		}
	}
	
	public static String swap(String a,int i,int j)
	{
		char temp;
		char[]arr=a.toCharArray();
		temp=arr[i];
		arr[i]=arr[j];
		arr[j]=temp;
		
		return String.valueOf(arr);
	}
	
	
	
	//Binary search from a word list
	

}
